Version: 1.0
desc:FrostHype Soft Clipper (chmaha)
author: chmaha
about:
  Uses DSP from airwindows "Hypersoft" by Chris Johnson
  https://github.com/airwindows/airwindows/tree/master/plugins/LinuxVST/src/Hypersoft (MIT License)
  JSFX version released under GPLv3 license

slider1:0.5<0,1,0.01>Input
slider2:0.5<0,1,0.01>Depth
slider3:0.5<0,1,0.01>Bright
slider4:0.5<0,1,0.01>Output

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

@init

@slider

A = slider1;
B = slider2;
C = slider3;
D = slider4;

@block

inputGain = A*2.0;
(inputGain > 1.0) ? inputGain *= inputGain : inputGain = 1.0-pow(1.0-inputGain,2);
stages = (B*12.0)+2;
bright = (1.0-C)*0.15;
outputGain = D*2.0;
(outputGain > 1.0) ? outputGain *= outputGain : outputGain = 1.0-pow(1.0-outputGain,2);
outputGain *= 0.68;

@sample
inputSampleL = spl0;
inputSampleR = spl1;

inputSampleL *= inputGain;
inputSampleR *= inputGain;

inputSampleL = sin(inputSampleL); inputSampleL += (sin(inputSampleL*2.0)/2.0);
inputSampleR = sin(inputSampleR); inputSampleR += (sin(inputSampleR*2.0)/2.0);
count = 2; while(count<stages) (
    inputSampleL += ((sin(inputSampleL*count)/pow(count,3))*max(0.0,1.0-abs((inputSampleL-lastSampleL)*bright*(count*count))));
    inputSampleR += ((sin(inputSampleR*count)/pow(count,3))*max(0.0,1.0-abs((inputSampleR-lastSampleR)*bright*(count*count))));
    count+=1;
);
lastSampleL = inputSampleL;
lastSampleR = inputSampleR;

inputSampleL *= outputGain;
inputSampleR *= outputGain;

spl0 = inputSampleL;
spl1 = inputSampleR;
